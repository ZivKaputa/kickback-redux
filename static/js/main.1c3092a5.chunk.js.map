{"version":3,"sources":["logo.svg","actions/queue/requestItems.js","actions/queue/receiveItems.js","actions/queue/updateScrollPosition.js","actions/queue/fetchItems.js","actions/queue/deleteItemLocally.js","actions/queue/deleteItem.js","actions/queue/reorderItemsLocally.js","actions/queue/reorderItems.js","components/KBQueueItem/KBQueueItem.js","components/KBQueueNowPlaying/KBQueueNowPlaying.js","components/KBQueue/KBQueue.js","containers/KBQueueContainer/KBQueueContainer.js","components/KBNowPlaying/KBNowPlaying.js","actions/spotify/updateIsPlaying.js","actions/spotify/skipSong.js","containers/KBNowPlayingContainer/KBNowPlayingContainer.js","actions/queue/addItemLocally.js","actions/search/updateScrollPosition.js","components/KBSearchResult/KBSearchResult.js","components/KBSearchResultList/KBSearchResultList.js","containers/KBSearchResultListContainer/KBSearchResultListContainer.js","actions/queue/addItem.js","components/KBNavBar/KBNavBar.js","components/KBNavBarButton/KBNavBarButton.js","components/KBNavBarSpacer/KBNavBarSpacer.js","actions/tab/updateCurrent.js","reducers/tab/current.js","actions/search/requestResults.js","actions/search/receiveResults.js","actions/search/fetchResults.js","actions/search/updateQuery.js","components/PatientSearchBar/PatientSearchBar.js","components/KBSearchBar/KBSearchBar.js","components/KBSearch/KBSearch.js","containers/KBSearchContainer/KBSearchContainer.js","components/KBControlPanelNavBar/KBControlPanelNavBar.js","actions/menu/toggleMenu.js","actions/chat/toggleChat.js","containers/KBControlPanelNavBarContainer/KBControlPanelNavBarContainer.js","actions/menu/updateCurrentMenuView.js","reducers/menu/currentView.js","components/KBMenuPrimaryView/KBMenuPrimaryView.js","actions/user/updateUserLocally.js","actions/user/updateUserOwnedSessionLocally.js","actions/user/updateUserOwnedSession.js","actions/user/requestFollowing.js","actions/user/receiveFollowing.js","actions/user/fetchFollowing.js","utilities/socket-context.js","actions/user/updateUser.js","actions/user/refreshUser.js","actions/session/updateSessionLocally.js","actions/chat/requestChat.js","actions/chat/receiveChat.js","actions/chat/fetchChat.js","actions/session/updateSession.js","actions/session/refreshSession.js","actions/menu/updateMenuFormField.js","containers/KBMenuPrimaryViewContainer/KBMenuPrimaryViewContainer.js","actions/user/deleteOwnedSession.js","actions/user/unfollowUser.js","components/KBFormInputBar/KBFormInputBar.js","components/KBMenuFormView/KBMenuFormView.js","components/KBMenu/KBMenu.js","actions/menu/updateMenuFormError.js","actions/menu/submitMenuForm.js","actions/user/followUser.js","containers/KBMenuContainer/KBMenuContainer.js","components/KBChat/KBChat.js","actions/chat/updateChatInputText.js","containers/KBChatContainer/KBChatContainer.js","actions/chat/sendMessage.js","components/KBControlPanel/KBControlPanel.js","containers/KBControlPanelContainer/KBControlPanelContainer.js","actions/spotify/updateAccessTokenLocally.js","components/KBSpotifyManager/KBSpotifyManager.js","containers/KBSpotifyManagerContainer/KBSpotifyManagerContainer.js","App.js","VisibleApp.js","serviceWorker.js","reducers/search/query.js","reducers/search/scrollPosition.js","actions/search/invalidateResults.js","reducers/search/results.js","reducers/search/index.js","actions/queue/invalidateItems.js","reducers/queue/data.js","reducers/queue/scrollPosition.js","reducers/queue/index.js","reducers/session/id.js","reducers/session/name.js","reducers/session/index.js","reducers/user/id.js","reducers/user/session.js","actions/user/invalidateFollowing.js","reducers/user/following.js","reducers/user/index.js","reducers/tab/index.js","reducers/menu/isOpen.js","reducers/menu/formInfo.js","reducers/menu/index.js","reducers/chat/isOpen.js","actions/chat/invalidateChat.js","reducers/chat/data.js","reducers/chat/inputText.js","reducers/chat/index.js","reducers/spotify/accessToken.js","reducers/spotify/isPlaying.js","reducers/spotify/index.js","reducers/index.js","index.js","actions/user/restoreUser.js","actions/session/restoreSession.js"],"names":["module","exports","QUEUE_REQUEST_ITEMS","QUEUE_RECEIVE_ITEMS","receiveItems","sessionId","requestedAt","items","type","receivedAt","Date","now","QUEUE_UPDATE_SCROLL_POSITION","updateScrollPosition","scrollPosition","fetchItems","dispatch","getState","session","id","requestItems","fetch","then","response","json","error","console","log","QUEUE_DELETE_ITEM_LOCALLY","deleteItem","deleteItemId","deletedTrack","queue","data","DELETE_URL","song_id","deleteItemLocally","QUEUE_REORDER_ITEMS_LOCALLY","reorderItems","fromId","toId","newItemsReorder","Array","from","movedItemReorder","splice","nextItem","length","afterSongId","afterSongParam","sessionIdParam","REORDER_URL","reorderItemsLocally","KBQueueItem","draggableId","this","props","track","toString","index","provided","snapshot","draggingClass","isDragging","draggableProps","ref","innerRef","className","src","album_image","name","artists","join","substring","album","isAdmin","dragHandleProps","icon","onClick","onDelete","Component","KBQueueNowPlaying","KBQueue","handleDragEnd","bind","rootRef","React","createRef","handleScroll","current","scrollTop","onScroll","result","destination","source","droppableId","onReorder","tracks","nowPlaying","key","queueItems","slice","map","onDragEnd","droppableProps","placeholder","KBQueueContainer","connect","state","user","songId","KBNowPlaying","item","isPlaying","pause","play","skipSong","UPDATE_IS_PLAYING","updateIsPlaying","KBNowPlayingContainer","spotify","QUEUE_ADD_ITEM_LOCALLY","SEARCH_UPDATE_SCROLL_POSITION","KBSearchResult","KBSearchResultList","inSession","trackList","KBSearchResultListContainer","search","results","uri","toast","userId","ADD_URL","KBNavBar","navBarClass","children","defaultProps","KBNavBarButton","navBarButtonClass","active","KBNavBarSpacer","fixedStyle","width","flex","style","TAB_UPDATE_CURRENT","tabs","DEFAULT_STATE","SEARCH_REQUEST_RESULTS","SEARCH_RECEIVE_RESULTS","receiveResults","query","fetchResults","requestResults","SEARCH_UPDATE_QUERY","PatientSearchBar","lastChangedAt","handleChange","newText","onChange","changedAt","setTimeout","onPatientChange","waitTime","value","e","target","undefined","KBSearchBar","KBSearch","updateQuery","KBSearchContainer","addItem","titles","now_playing","KBControlPanelNavBar","searchBar","currentTab","title","isMenuOpen","toggleMenu","updateTab","isChatOpen","toggleChat","MENU_TOGGLE","CHAT_TOGGLE","KBControlPanelNavBarContainer","tab","menu","isOpen","chat","newTab","MENU_VIEW_UPDATE_CURRENT","updateCurrentMenuView","currentView","views","PRIMARY","LOGIN","SIGN_UP","JOIN","CREATE","ADD_FOLLOWER","KBMenuPrimaryView","DEFAULT_LOGIN_CONTENT","updateView","DEFAULT_CURRENT_SESSION_CONTENT","username","DEFAULT_MY_SESSION_CONTENT","DEFAULT_FOLLOWING_LIST_CONTENT","usernameContent","logout","currentSessionContent","sessionName","sessionID","leaveSession","mySessionContent","mySessionID","mySessionName","updateSession","deleteMySession","followingListContent","following","rawUserData","Object","keys","userInfo","session_id","session_name","joinSession","unfollowUser","UPDATE_USER_LOCALLY","UPDATE_USER_OWNED_SESSION_LOCALLY","updateUserOwnedSessionLocally","safeNull","obj","updateUserOwnedSession","URL","FOLLOWING_REQUEST_RESULTS","FOLLOWING_RECEIVE_RESULTS","receiveFollowing","fetchFollowing","requestFollowing","socket","getSocket","updateUser","newUserId","emit","localforage","setItem","getItem","updateUserLocally","UPDATE_SESSION_LOCALLY","CHAT_REQUEST_RESULTS","CHAT_RECEIVE_RESULTS","receiveChat","fetchChat","requestChat","newSessionID","newSessionName","sessionInfo","updateSessionLocally","UPDATE_MENU_FORM_FIELD","updateMenuFormField","field","newVal","KBMenuPrimaryViewContainer","view","ok","KBFormInputBar","label","KBMenuFormView","inputs","formInfo","inputContent","onInputChange","onSubmit","submitLabel","onCancel","KBMenu","viewContent","UPDATE_MENU_FORM_ERROR","updateMenuFormError","newError","submitMenuForm","BASE_URL","url","password","sessionPassword","handle","promise","text","errorText","handleError","JSON","parse","handleSuccess","catch","KBMenuContainer","KBChat","chatList","messages","messageInfo","messageId","message","inputText","updateText","sendMessage","CHAT_UPDATE_INPUT_TEXT","updateChatInputText","KBChatContainer","KBControlPanel","mainTab","KBControlPanelContainer","UPDATE_ACCESS_TOKEN_LOCALLY","clientId","redirectUri","authorizeURL","encodeURIComponent","SpotifyWebApi","KBSpotifyManager","handleAuthorization","playSong","pauseSong","checkAuthorization","initializePlayer","player","fresh","lastSong","accessToken","window","location","Spotify","Player","getOAuthToken","callback","volume","addListener","device_id","spotifyPlayerState","position","paused","currentTrack","success","playFromStart","spotify_uri","playerInstance","_options","access_token","method","body","stringify","uris","headers","resume","nextProps","nextState","playerActive","isNewSong","setPaused","onSpotifyWebPlaybackSDKReady","matches","hash","match","RegExp","getHashValue","updateAccessToken","history","replaceState","KBSpotifyManagerContainer","newAccessToken","App","toastClassName","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnVisibilityChange","draggable","pauseOnHover","VisibleApp","Boolean","hostname","SEARCH_INVALIDATE_RESULTS","isFetching","didInvalidate","lastUpdated","lastRequestedAt","lastSuccesfullyRequestedAt","combineReducers","action","QUEUE_INVALIDATE_ITEMS","newItemsDelete","FOLLOWING_INVALIDATE_RESULTS","USERNAME_PLACEHOLDER","PASSWORD_PLACEHOLDER","SESSION_ID_PLACEHOLDER","SESSION_NAME_PLACEHOLDER","CHAT_INVALIDATE_RESULTS","rootReducer","io","on","msg","store","loggerMiddleware","createLogger","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1c3092a5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","export const QUEUE_REQUEST_ITEMS = 'QUEUE_REQUEST_ITEMS'\n\nexport default function requestItems(sessionId, requestedAt) {\n  return {\n    type: QUEUE_REQUEST_ITEMS,\n    sessionId,\n    requestedAt\n  }\n}","export const QUEUE_RECEIVE_ITEMS = 'QUEUE_RECEIVE_ITEMS'\n\nexport default function receiveItems(sessionId, requestedAt, items) {\n  return {\n    type: QUEUE_RECEIVE_ITEMS,\n    items,\n    requestedAt,\n    receivedAt: Date.now()\n  }\n}","export const QUEUE_UPDATE_SCROLL_POSITION = 'QUEUE_UPDATE_SCROLL_POSITION'\n\nexport default function updateScrollPosition(scrollPosition) {\n  return {\n    type: QUEUE_UPDATE_SCROLL_POSITION,\n    scrollPosition\n  }\n}","import requestItems from './requestItems.js'\nimport receiveItems from './receiveItems.js'\nimport updateScrollPosition from './updateScrollPosition.js'\n\nexport default function fetchItems() {\n  return function(dispatch, getState) {\n\n    let sessionId = getState().session.id\n    let requestedAt = Date.now()\n    dispatch(requestItems(sessionId, requestedAt))\n\n    if (!sessionId || sessionId === \"\") {\n      dispatch(receiveItems(sessionId, requestedAt, []))\n      dispatch(updateScrollPosition(0))\n      return\n    }\n\n    return fetch(`https://frabric.herokuapp.com/get_queue/?session_id=${sessionId}`)\n      .then(\n        response => response.json(),\n        error => console.log('An error occurred.', error)\n      )\n      .then(json => {\n        dispatch(receiveItems(sessionId, requestedAt, json))\n        dispatch(updateScrollPosition(0))\n      })\n  }\n}","export const QUEUE_DELETE_ITEM_LOCALLY = 'QUEUE_DELETE_ITEM_LOCALLY'\n\nexport default function deleteItemLocally(deleteItemId) {\n  return {\n    type: QUEUE_DELETE_ITEM_LOCALLY,\n    deleteItemId\n  }\n}","import fetchItems from './fetchItems.js'\nimport deleteItemLocally from './deleteItemLocally.js'\n\nexport default function deleteItem(deleteItemId) {\n  return function(dispatch, getState) {\n\n    const deletedTrack = getState().queue.data.items[deleteItemId]\n    let DELETE_URL = `https://frabric.herokuapp.com/delete_song/?song_id=${deletedTrack.song_id}`\n\n    dispatch(deleteItemLocally(deleteItemId))\n\n    fetch(DELETE_URL).then(\n      error => console.log('An error occurred.', error)\n    ).then(response => {\n      dispatch(fetchItems())\n    })\n\n  }\n}","export const QUEUE_REORDER_ITEMS_LOCALLY = 'QUEUE_REORDER_ITEMS_LOCALLY'\n\nexport default function reorderItemsLocally(fromId, toId) {\n  return {\n    type: QUEUE_REORDER_ITEMS_LOCALLY,\n    fromId,\n    toId\n  }\n}","import fetchItems from './fetchItems.js'\nimport reorderItemsLocally from './reorderItemsLocally.js'\n\nexport default function reorderItems(fromId, toId) {\n  return function(dispatch, getState) {\n\n    let newItemsReorder = Array.from(getState().queue.data.items)\n    let movedItemReorder = newItemsReorder[fromId]\n    newItemsReorder.splice(fromId, 1)\n    const nextItem = (toId < newItemsReorder.length) ? newItemsReorder[toId] : null\n\n    const afterSongId = (nextItem ? nextItem.song_id : null)\n    const afterSongParam = afterSongId ? (\"&after_song_id=\" + afterSongId) : \"\"\n    const sessionIdParam = \"&session_id=\" + getState().session.id\n    let REORDER_URL = \"https://frabric.herokuapp.com/move_song?move_song_id=\" + movedItemReorder.song_id + afterSongParam + sessionIdParam\n\n    dispatch(reorderItemsLocally(fromId, toId))\n\n    fetch(REORDER_URL).then(\n      error => console.log('An error occurred.', error)\n    ).then(response => {\n      dispatch(fetchItems())\n    })\n\n  }\n}\n\n\n\n","import React, { Component } from 'react'\nimport { Draggable } from 'react-beautiful-dnd'\nimport PropTypes from 'prop-types'\nimport { MDBIcon } from \"mdbreact\"\nimport './KBQueueItem.scss'\n\nconst DEFAULT_ALBUM_IMAGE = \"http://cdn.last.fm/flatness/responsive/2/noimage/default_album_300_g4.png\"\n\nclass KBQueueItem extends Component {\n\n  render() {\n    return (\n      <Draggable draggableId={this.props.track.song_id.toString()} index={this.props.index}>\n        {(provided, snapshot) => {\n\n          let draggingClass = snapshot.isDragging ? 'kb-queue-item-container-dragging' : ''\n\n          return (\n            <div\n              {...provided.draggableProps}\n              ref={provided.innerRef}\n              className='kb-queue-item'\n            >\n              <div className={'kb-queue-item-container ' + draggingClass}>\n                <div className='kb-queue-item-image-container'>\n                  <img className='kb-queue-item-image' src={this.props.track.album_image || DEFAULT_ALBUM_IMAGE}/>\n                </div>\n                <div className='kb-queue-item-info-container'>\n                  <div className='kb-queue-item-info-pad'/>\n                  <div className='kb-queue-item-name'>\n                    {this.props.track.name}\n                  </div>\n                  <div className='kb-queue-item-details'>\n                    {this.props.track.artists.join(\", \").substring(0,50)} • {this.props.track.album.substring(0,50)}\n                  </div>\n                  <div className='kb-queue-item-info-pad'/>\n                </div>\n                {this.props.isAdmin ? (\n                  <div {...provided.dragHandleProps} className='kb-queue-item-drag-handle'>\n                    <MDBIcon icon=\"grip-lines\"/>\n                  </div>\n                ) : null}\n                {this.props.isAdmin ? (\n                  <div className='kb-queue-item-delete' onClick={() => this.props.onDelete(this.props.index)}>\n                    <MDBIcon icon=\"minus-circle\"/>\n                  </div>\n                ) : null}\n              </div>\n            </div>\n          )\n        }}\n      </Draggable>\n    )\n  }\n\n}\n\nKBQueueItem.propTypes = {\n  track: PropTypes.object,\n  index: PropTypes.number,\n  isAdmin: PropTypes.bool\n}\n\nexport default KBQueueItem","import React, { Component } from 'react'\nimport { Draggable } from 'react-beautiful-dnd'\nimport PropTypes from 'prop-types'\nimport { MDBIcon } from \"mdbreact\"\nimport './KBQueueNowPlaying.scss'\nimport '../KBQueueItem/KBQueueItem.scss'\n\nconst DEFAULT_ALBUM_IMAGE = \"http://cdn.last.fm/flatness/responsive/2/noimage/default_album_300_g4.png\"\n\nclass KBQueueNowPlaying extends Component {\n\n  render() {\n    return (\n      <div className='kb-queue-item kb-queue-now-playing'>\n        <div className='kb-queue-item-container'>\n          <div className='kb-queue-item-image-container'>\n            <img className='kb-queue-item-image' src={this.props.track.album_image || DEFAULT_ALBUM_IMAGE}/>\n          </div>\n          <div className='kb-queue-item-info-container'>\n            <div className='kb-queue-item-info-pad'/>\n            <div className='kb-queue-item-name'>\n              {this.props.track.name}\n            </div>\n            <div className='kb-queue-item-details'>\n              {this.props.track.artists.join(\", \").substring(0,50)} • {this.props.track.album.substring(0,50)}\n            </div>\n            <div className='kb-queue-item-info-pad'/>\n          </div>\n          <div className='kb-queue-now-playing-label'>\n            Now Playing\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nKBQueueNowPlaying.propTypes = {\n  track: PropTypes.object\n}\n\nexport default KBQueueNowPlaying","import React, { Component } from \"react\"\nimport PropTypes from 'prop-types'\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd'\nimport KBQueueItem from '../KBQueueItem'\nimport KBQueueNowPlaying from '../KBQueueNowPlaying'\nimport './KBQueue.scss'\n\nclass KBQueue extends Component {\n\n  constructor(props) {\n    super(props);\n    this.handleDragEnd = this.handleDragEnd.bind(this)\n    this.rootRef = React.createRef()\n    this.handleScroll = this.handleScroll.bind(this)\n  }\n\n  componentDidMount() {\n    if (this.rootRef.current && this.props.scrollPosition) {\n      this.rootRef.current.scrollTop = this.props.scrollPosition\n    }\n  }\n\n  handleScroll() {\n    this.props.onScroll(this.rootRef.current.scrollTop)\n  }\n\n  handleDragEnd(result) {\n    const {destination, source, draggableId } = result\n    if (!destination) {\n      return;\n    }\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\n      return;\n    }\n    this.props.onReorder(source.index, destination.index)\n  }\n\n  render() {\n\n    if (this.props.tracks.length == 0) {\n      return (\n        <div className='kb-queue-list'>\n          <div className='kb-queue-empty'>\n            No tracks in queue\n          </div>\n        </div>\n      )\n    }\n\n    const nowPlaying = (this.props.tracks.length > 0) ? <KBQueueNowPlaying track={this.props.tracks[0]} key={this.props.tracks[0].song_id}/> : <div></div>\n\n    const queueItems = this.props.tracks.slice(1).map((track, index) =>\n      <KBQueueItem\n        isAdmin={this.props.isAdmin}\n        track={track}\n        key={track.song_id}\n        index={index+1}\n        onDelete={this.props.onDelete}\n      />\n    );\n\n    return (\n      <div onScroll={this.handleScroll} ref={this.rootRef} className='kb-queue-list'>\n        {nowPlaying}\n        <DragDropContext onDragEnd={this.handleDragEnd}>\n          <Droppable droppableId='kb-queue-droppable'>\n            {(provided) => (\n              <div\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n              >\n                {queueItems}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </div>\n    )\n  }\n}\n\nKBQueue.propTypes = {\n  onReorder: PropTypes.func,\n  onDelete: PropTypes.func,\n  tracks: PropTypes.array,\n  scrollPosition: PropTypes.number,\n  onScroll: PropTypes.func,\n  isAdmin: PropTypes.bool\n}\n\nexport default KBQueue","import { connect } from 'react-redux'\nimport deleteItem from '../../actions/queue/deleteItem'\nimport reorderItems from '../../actions/queue/reorderItems'\nimport updateScrollPosition from '../../actions/queue/updateScrollPosition'\nimport KBQueue from '../../components/KBQueue'\n\nconst mapStateToProps = state => {\n  return {\n    tracks: state.queue.data.items || [],\n    scrollPosition: state.queue.scrollPosition,\n    isAdmin: (state.user.session.id && (state.user.session.id === state.session.id))\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onDelete: songId => {\n      dispatch(deleteItem(songId))\n    },\n    onReorder: (fromId, toId) => {\n      dispatch(reorderItems(fromId, toId))\n    },\n    onScroll: scrollPosition => {\n      dispatch(updateScrollPosition(scrollPosition))\n    }\n  }\n}\n\nconst KBQueueContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(KBQueue)\n\nexport default KBQueueContainer","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { MDBIcon } from \"mdbreact\"\nimport './KBNowPlaying.scss'\n\nclass KBNowPlaying extends Component {\n  render() {\n    if (!this.props.item) {\n      return (\n          <div className='kb-now-playing'>\n            <div className='kb-now-playing-empty'>\n              No current song\n            </div>\n          </div>\n      )\n    }\n    return (\n      <div className='kb-now-playing'>\n        <div className='flex-padding'/>\n        <div className='kb-now-playing-panel'>\n          <div className='kb-now-playing-image-container'>\n            <img className='kb-now-playing-image' src={this.props.item.album_image}/>\n          </div>\n          <div className='kb-now-playing-info-container'>\n            <div className='kb-now-playing-title'>\n              {this.props.item.name}<br/>\n            </div>\n            <div className='kb-now-playing-artist-album-info'>\n              {this.props.item.artists.join(\", \").substring(0,50)} • {this.props.item.album.substring(0,50)}\n            </div>\n          </div>\n          {this.props.isAdmin ? (\n            <div className='kb-now-playing-control-container'>\n              <div className='flex-padding'/>\n              <div className='kb-now-playing-button'>\n                { this.props.isPlaying ? (\n                  <span onClick={this.props.pause}><MDBIcon icon='pause'/></span>\n                ) : (\n                  <span onClick={this.props.play}><MDBIcon icon='play'/></span>\n                )}\n              </div>\n              <div className='kb-now-playing-button'>\n                <span onClick={this.props.skipSong}><MDBIcon icon='step-forward'/></span>\n              </div>\n              <div className='flex-padding'/>\n            </div>\n          ) : null }\n        </div>\n        <div className='flex-padding'/>\n      </div>\n    )\n  }\n}\n\nKBNowPlaying.propTypes = {\n  item: PropTypes.object,\n  isAdmin: PropTypes.bool,\n  isPlaying: PropTypes.bool,\n  play: PropTypes.func,\n  pause: PropTypes.func,\n  skipSong: PropTypes.func\n}\n\nexport default KBNowPlaying","export const UPDATE_IS_PLAYING = 'UPDATE_IS_PLAYING'\n\nexport default function updateIsPlaying(isPlaying) {\n  return {\n    type: UPDATE_IS_PLAYING,\n    isPlaying\n  }\n}","import fetchItems from '../queue/fetchItems'\n\nexport default function skipSong() {\n  return function(dispatch, getState) {\n\n    return fetch(`https://frabric.herokuapp.com/play_next_song/?session_id=${getState().session.id}`)\n      .then(response => {\n        dispatch(fetchItems())\n        return response\n      })\n  }\n}","import { connect } from 'react-redux'\nimport KBNowPlaying from '../../components/KBNowPlaying'\nimport updateIsPlaying from '../../actions/spotify/updateIsPlaying'\nimport skipSong from '../../actions/spotify/skipSong'\n\nconst mapStateToProps = state => {\n  var item = null\n  if (state.queue.data.items && state.queue.data.items.length > 0) {\n    item = state.queue.data.items[0]\n  }\n\n  let isAdmin = (state.user.session.id && (state.user.session.id === state.session.id))\n\n  return {\n    item,\n    isAdmin,\n    isPlaying: state.spotify.isPlaying\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    play: () => {\n      dispatch(updateIsPlaying(true))\n    },\n    pause: () => {\n      dispatch(updateIsPlaying(false))\n    },\n    skipSong: () => {\n      dispatch(skipSong())\n    }\n  }\n}\n\nconst KBNowPlayingContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(KBNowPlaying)\n\nexport default KBNowPlayingContainer","export const QUEUE_ADD_ITEM_LOCALLY = 'QUEUE_ADD_ITEM_LOCALLY'\n\nexport default function addItemLocally(item) {\n  return {\n    type: QUEUE_ADD_ITEM_LOCALLY,\n    item\n  }\n}","export const SEARCH_UPDATE_SCROLL_POSITION = 'SEARCH_UPDATE_SCROLL_POSITION'\n\nexport default function updateScrollPosition(scrollPosition) {\n  return {\n    type: SEARCH_UPDATE_SCROLL_POSITION,\n    scrollPosition\n  }\n}","import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport './KBSearchResult.scss'\n\nconst DEFAULT_ALBUM_IMAGE = \"http://cdn.last.fm/flatness/responsive/2/noimage/default_album_300_g4.png\";\n\nclass KBSearchResult extends Component {\n  render() {\n    return (\n      <div className='kb-search-result' onClick={() => this.props.onClick(this.props.track)}>\n        <div className='kb-search-result-image-container'>\n          <img className='kb-search-result-image' src={this.props.track.album_image || DEFAULT_ALBUM_IMAGE}/>\n        </div>\n        <div className='kb-search-result-info-container'>\n          <div className='kb-search-result-info-pad'/>\n          <div className='kb-search-result-name'>\n            {this.props.track.name}\n          </div>\n          <div className='kb-search-result-details'>\n            {this.props.track.artists.join(\", \")} • {this.props.track.album}\n          </div>\n          <div className='kb-search-result-info-pad'/>\n        </div>\n      </div>\n    )\n  }\n}\n\nKBSearchResult.propTypes = {\n  track: PropTypes.object,\n  onClick: PropTypes.func\n}\n\nexport default KBSearchResult;","import React, {Component} from 'react'\nimport KBSearchResult from '../KBSearchResult'\nimport PropTypes from 'prop-types'\nimport './KBSearchResultList.scss'\n\nclass KBSearchResultList extends Component {\n\n  constructor(props) {\n    super(props);\n    this.rootRef = React.createRef()\n    this.handleScroll = this.handleScroll.bind(this)\n  }\n\n  componentDidMount() {\n    if (this.rootRef.current && this.props.scrollPosition) {\n      this.rootRef.current.scrollTop = this.props.scrollPosition\n    }\n  }\n\n  handleScroll() {\n    this.props.onScroll(this.rootRef.current.scrollTop)\n  }\n\n  render() {\n\n    if (!this.props.inSession) {\n      return (\n        <div id='kb-search-results' className=\"kb-empty-search-result\">\n          Join a session to add songs\n        </div>\n      )\n    }\n\n    if (!this.props.tracks || this.props.tracks.length == 0) {\n      return (\n        <div id='kb-search-results' className=\"kb-empty-search-result\">\n          No results\n        </div>\n      )\n    }\n\n    const trackList = this.props.tracks.map((track, index) =>\n      <KBSearchResult\n        key={index}\n        track={track}\n        onClick={this.props.onClick}\n      />\n    );\n\n    return (\n      <div onScroll={this.handleScroll} ref={this.rootRef} id='kb-search-results' className=\"list-group kb-search-result-list\">\n        {trackList}\n      </div>\n    )\n  }\n}\n\nKBSearchResultList.propTypes = {\n  tracks: PropTypes.array,\n  onClick: PropTypes.func,\n  onScroll: PropTypes.func,\n  scrollPosition: PropTypes.number,\n  inSession: PropTypes.bool\n}\n\nexport default KBSearchResultList;","import { connect } from 'react-redux'\nimport addItem from '../../actions/queue/addItem'\nimport updateScrollPosition from '../../actions/search/updateScrollPosition'\nimport KBSearchResultList from '../../components/KBSearchResultList'\nimport { toast } from 'react-toastify'\n\nconst mapStateToProps = state => {\n  return {\n    tracks: state.search.results.items || [],\n    scrollPosition: state.search.scrollPosition,\n    inSession: (state.session.id !== null)\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onClick: track => {\n      toast(\"You added '\" + track.name + \"' to the queue.\")\n      dispatch(addItem(track.uri))\n    },\n    onScroll: scrollTop => {\n      dispatch(updateScrollPosition(scrollTop))\n    }\n  }\n}\n\nconst KBSearchResultListContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(KBSearchResultList)\n\nexport default KBSearchResultListContainer","import fetchItems from './fetchItems.js'\nimport addItemLocally from './addItemLocally.js'\n\nexport default function addItem(uri) {\n  return function(dispatch, getState) {\n\n    let userId = getState().user.id ? getState().user.id : 'Guest'\n    let ADD_URL = `https://frabric.herokuapp.com/add_song/?session_id=${getState().session.id}&uri=${uri}&username=${userId}`\n\n    // dispatch(addItemLocally(uri)) Currently requires all song info\n\n    fetch(ADD_URL).then(\n      error => console.log('An error occurred.', error)\n    ).then(response => {\n      dispatch(fetchItems())\n    })\n\n  }\n}","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport './KBNavBar.scss'\n\nclass KBNavBar extends Component {\n  render() {\n    const navBarClass = (this.props.type === 'primary') ? 'kb-nav-bar-primary' : 'kb-nav-bar-secondary'\n    return (\n      <div className={'kb-nav-bar ' + navBarClass}>\n        {this.props.children}\n      </div>\n    )\n  }\n}\n\nKBNavBar.propTypes = {\n  type: PropTypes.string,\n}\n\nKBNavBar.defaultProps = {\n  type: \"primary\"\n}\n\nexport default KBNavBar","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { MDBIcon } from 'mdbreact'\nimport './KBNavBarButton.scss'\n\nclass KBNavBarButton extends Component {\n  render() {\n    const navBarButtonClass = this.props.active ? 'kb-nav-bar-button-active' : 'kb-nav-bar-button-inactive'\n    return (\n      <div className='kb-nav-bar-button'>\n        <MDBIcon className={navBarButtonClass} onClick={this.props.onClick} icon={this.props.icon}/>\n      </div>\n    )\n  }\n}\n\nKBNavBarButton.propTypes = {\n  onClick: PropTypes.func,\n  icon: PropTypes.string\n}\n\nexport default KBNavBarButton","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport './KBNavBarSpacer.scss'\n\nclass KBNavBarSpacer extends Component {\n\n  render() {\n\n    let fixedStyle = null\n    if (this.props.width) {\n      fixedStyle = {\n        flex: 'none',\n        width: this.props.width\n      }\n    }\n\n    return (\n      <div  className='kb-nav-bar-spacer' style={fixedStyle}>\n      </div>\n    )\n  }\n}\n\nKBNavBarSpacer.propTypes = {\n}\n\nexport default KBNavBarSpacer","export const TAB_UPDATE_CURRENT = 'TAB_UPDATE_CURRENT'\n\nexport default function updateCurrent(currentTab) {\n  return {\n    type: TAB_UPDATE_CURRENT,\n    currentTab\n  }\n}","import { TAB_UPDATE_CURRENT } from '../../actions/tab/updateCurrent.js'\n\nexport const tabs = {\n  SEARCH: 'search',\n  QUEUE: 'queue',\n  NOW_PLAYING: 'now_playing'\n}\n\nconst DEFAULT_STATE = tabs.QUEUE\n\nexport default function current(state = DEFAULT_STATE, action) {\n  switch (action.type) {\n    case TAB_UPDATE_CURRENT:\n      return action.currentTab\n    default:\n      return state\n  }\n}","export const SEARCH_REQUEST_RESULTS = 'SEARCH_REQUEST_RESULTS'\n\nexport default function requestResults(query, requestedAt) {\n  return {\n    type: SEARCH_REQUEST_RESULTS,\n    query,\n    requestedAt\n  }\n}","export const SEARCH_RECEIVE_RESULTS = 'SEARCH_RECEIVE_RESULTS'\n\nexport default function receiveResults(query, requestedAt, items) {\n  return {\n    type: SEARCH_RECEIVE_RESULTS,\n    items,\n    requestedAt,\n    receivedAt: Date.now()\n  }\n}","import requestResults from './requestResults.js'\nimport receiveResults from './receiveResults.js'\nimport updateScrollPosition from './updateScrollPosition.js'\n\nexport default function fetchResults(query) {\n  return function(dispatch) {\n\n    let requestedAt = Date.now()\n    dispatch(requestResults(query, requestedAt))\n\n    if (query === \"\") {\n      dispatch(receiveResults(query, requestedAt, []))\n      dispatch(updateScrollPosition(0))\n      return\n    }\n\n    return fetch(`https://frabric.herokuapp.com/search/?q=${query}`)\n      .then(\n        response => response.json(),\n        error => console.log('An error occurred.', error)\n      )\n      .then(json => {\n        dispatch(receiveResults(query, requestedAt, json))\n        dispatch(updateScrollPosition(0))\n      })\n  }\n}","export const SEARCH_UPDATE_QUERY = 'SEARCH_UPDATE_QUERY'\n\nexport default function updateQuery(query) {\n  return {\n    type: SEARCH_UPDATE_QUERY,\n    query\n  }\n}","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nclass PatientSearchBar extends Component {\n\n  constructor(props) {\n    super(props)\n    this.lastChangedAt = Date.now()\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange(newText) {\n    this.props.onChange(newText)\n    const changedAt = Date.now()\n    this.lastChangedAt = changedAt\n    setTimeout(() => {\n      if (changedAt === this.lastChangedAt) {\n        this.props.onPatientChange(newText)\n      }\n    }, this.props.waitTime)\n  }\n\n  render() {\n    return (\n      <input\n        type='text'\n        placeholder={this.props.placeholder}\n        value={this.props.value}\n        onChange={e => this.handleChange(e.target.value)}\n        className={this.props.className}\n      />\n    )\n  }\n\n}\n\nPatientSearchBar.propTypes = {\n  placeholder: PropTypes.string,\n  value: PropTypes.string,\n  onPatientChange: PropTypes.func,\n  onChange: PropTypes.func,\n  waitTime: PropTypes.number,\n  className: PropTypes.string,\n}\n\nPatientSearchBar.defaultProps = {\n  placeholder: \"Search...\",\n  value: undefined,\n  onPatientChange: () => {},\n  onChange: () => {},\n  waitTime: 0,\n  className: \"\"\n}\n\nexport default PatientSearchBar","import React, { Component } from 'react'\nimport PatientSearchBar from '../PatientSearchBar'\nimport PropTypes from 'prop-types'\nimport './KBSearchBar.scss'\n\nclass KBSearchBar extends Component {\n  render() {\n    return (\n      <PatientSearchBar\n        placeholder={this.props.placeholder}\n        value={this.props.value}\n        waitTime={200}\n        onPatientChange={this.props.onPatientChange}\n        onChange={this.props.onChange}\n        className={\"kb-search-bar \" + this.props.className}\n      />\n    )\n  }\n}\n\nKBSearchBar.propTypes = {\n  placeholder: PropTypes.string,\n  value: PropTypes.string,\n  onPatientChange: PropTypes.func,\n  onChange: PropTypes.func,\n  className: PropTypes.string\n}\n\nKBSearchBar.defaultProps = {\n  placeholder: \"Search...\",\n  value: undefined,\n  onPatientChange: () => {},\n  onChange: () => {},\n  className: \"\"\n}\n\nexport default KBSearchBar","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport KBSearchBar from '../KBSearchBar'\n\nclass KBSearch extends Component {\n  render() {\n    return (\n      <div>\n        <KBSearchBar\n          onPatientChange={this.props.fetchResults}\n          onChange={this.props.updateQuery}\n          value={this.props.query}\n        />\n      </div>\n    )\n  }\n}\n\nKBSearch.propTypes = {\n  fetchResults: PropTypes.func,\n  updateQuery: PropTypes.func,\n  query: PropTypes.string,\n}\n\nexport default KBSearch","import { connect } from 'react-redux'\nimport fetchResults from '../../actions/search/fetchResults'\nimport updateQuery from '../../actions/search/updateQuery'\nimport addItem from '../../actions/queue/addItem'\nimport deleteItem from '../../actions/queue/deleteItem'\nimport reorderItems from '../../actions/queue/reorderItems'\nimport KBSearch from '../../components/KBSearch'\n\nconst mapStateToProps = state => {\n  return {\n    items: state.search.results.items,\n    query: state.search.query\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateQuery: query => {\n      dispatch(updateQuery(query))\n    },\n    fetchResults: query => {\n      dispatch(fetchResults(query))\n    },\n    addItem: (uri) => {\n      dispatch(reorderItems(1,2))\n      // dispatch(deleteItem(1))\n      // dispatch(addItem(uri))\n    }\n  }\n}\n\nconst KBSearchContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(KBSearch)\n\nexport default KBSearchContainer","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport KBNavBar from '../KBNavBar'\nimport KBNavBarButton from '../KBNavBarButton'\nimport KBNavBarSpacer from '../KBNavBarSpacer'\nimport {tabs} from '../../reducers/tab/current.js'\nimport KBSearchContainer from '../../containers/KBSearchContainer'\nimport './KBControlPanelNavBar.scss'\n\nconst titles = {\n  search: '',\n  queue: 'Queue',\n  now_playing: 'Now Playing'\n}\n\nclass KBControlPanelNavBar extends Component {\n  render() {\n\n    const searchBar = this.props.currentTab === tabs.SEARCH ? <KBSearchContainer/> : null\n    const title = titles[this.props.currentTab]\n\n    return (\n      <KBNavBar type='secondary'>\n        <KBNavBarButton active={this.props.isMenuOpen} icon='bars' onClick={() => {this.props.toggleMenu()}}/>\n        <KBNavBarSpacer width='4px'/>\n        {title}{searchBar}\n        <KBNavBarSpacer/>\n        <KBNavBarButton active={this.props.currentTab === tabs.SEARCH} icon='search' onClick={() => {this.props.updateTab(tabs.SEARCH)}}/>\n        <KBNavBarButton active={this.props.currentTab === tabs.QUEUE} icon='list-alt' onClick={() => {this.props.updateTab(tabs.QUEUE)}}/>\n        <KBNavBarButton active={this.props.currentTab === tabs.NOW_PLAYING} icon='volume-up' onClick={() => {this.props.updateTab(tabs.NOW_PLAYING)}}/>\n        <KBNavBarSpacer width='4px'/>\n        <KBNavBarButton active={this.props.isChatOpen} icon='comments' onClick={() => {this.props.toggleChat()}}/>\n      </KBNavBar>\n    )\n  }\n}\n\nKBControlPanelNavBar.propTypes = {\n  isMenuOpen: PropTypes.bool,\n  currentTab: PropTypes.string,\n  isChatOpen: PropTypes.bool,\n  updateTab: PropTypes.func,\n  toggleChat: PropTypes.func,\n  toggleMenu: PropTypes.func,\n}\n\nexport default KBControlPanelNavBar","export const MENU_TOGGLE = 'MENU_TOGGLE'\n\nexport default function toggleMenu(currentTab) {\n  return {\n    type: MENU_TOGGLE\n  }\n}","export const CHAT_TOGGLE = 'CHAT_TOGGLE'\n\nexport default function toggleChat(currentTab) {\n  return {\n    type: CHAT_TOGGLE\n  }\n}","import { connect } from 'react-redux'\nimport KBControlPanelNavBar from '../../components/KBControlPanelNavBar'\nimport updateCurrent from '../../actions/tab/updateCurrent'\nimport toggleMenu from '../../actions/menu/toggleMenu'\nimport toggleChat from '../../actions/chat/toggleChat'\n\nconst mapStateToProps = state => {\n  return {\n    currentTab: state.tab.current,\n    isMenuOpen: state.menu.isOpen,\n    isChatOpen: state.chat.isOpen\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateTab: newTab => {\n      dispatch(updateCurrent(newTab))\n    },\n    toggleMenu: newTab => {\n      dispatch(toggleMenu())\n    },\n    toggleChat: newTab => {\n      dispatch(toggleChat())\n    }\n  }\n}\n\nconst KBControlPanelNavBarContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(KBControlPanelNavBar)\n\nexport default KBControlPanelNavBarContainer","export const MENU_VIEW_UPDATE_CURRENT = 'MENU_VIEW_UPDATE_CURRENT'\n\nexport default function updateCurrentMenuView(currentView) {\n  return {\n    type: MENU_VIEW_UPDATE_CURRENT,\n    currentView\n  }\n}","import { MENU_VIEW_UPDATE_CURRENT } from '../../actions/menu/updateCurrentMenuView.js'\n\nexport const views = {\n  PRIMARY: 'primary',\n  LOGIN: 'login',\n  SIGN_UP: 'sign_up',\n  JOIN: 'join',\n  CREATE: 'create',\n  ADD_FOLLOWER: 'add_follower'\n}\n\nconst DEFAULT_STATE = views.PRIMARY\n\nexport default function currentView(state = DEFAULT_STATE, action) {\n  switch (action.type) {\n    case MENU_VIEW_UPDATE_CURRENT:\n      return action.currentView\n    default:\n      return state\n  }\n}","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { views } from '../../reducers/menu/currentView'\nimport './KBMenuPrimaryView.scss'\n\nclass KBMenuPrimaryView extends Component {\n  render() {\n\n    const DEFAULT_LOGIN_CONTENT = (\n      <div className='kb-menu-primary-bottom-controls'>\n        <a className='kb-menu-link' onClick={() => {this.props.updateView(views.LOGIN)}}>Log In</a>\n        <span> • </span>\n        <a className='kb-menu-link' onClick={() => {this.props.updateView(views.SIGN_UP)}}>Sign Up</a>\n      </div>\n    )\n    const DEFAULT_CURRENT_SESSION_CONTENT = (\n      <div className='kb-menu-primary-bottom-controls'>\n        {\n          this.props.username ? (\n            <span>\n              <a className='kb-menu-link' onClick={() => {this.props.updateView(views.JOIN)}}>Join</a>\n              <span> • </span>\n              <a className='kb-menu-link' onClick={() => {this.props.updateView(views.CREATE)}}>Create</a>\n            </span>\n          ) : (\n            <span>\n              <a className='kb-menu-link' onClick={() => {this.props.updateView(views.JOIN)}}>Join</a>\n              <span> • </span>\n              <a className='kb-menu-link' onClick={() => {this.props.updateView(views.LOGIN)}}>Log In</a>\n              <span> to Create</span>\n            </span>\n          )\n        }\n      </div>\n    )\n    const DEFAULT_MY_SESSION_CONTENT = (\n      <div className='kb-menu-primary-bottom-controls'>\n        {\n          this.props.username ? (\n            <span>\n              <a className='kb-menu-link' onClick={() => {this.props.updateView(views.CREATE)}}>Create</a>\n            </span>\n          ) : (\n            <span>\n              <a className='kb-menu-link' onClick={() => {this.props.updateView(views.LOGIN)}}>Log In</a><span> to Create</span>\n            </span>\n          )\n        }\n      </div>\n    )\n    const DEFAULT_FOLLOWING_LIST_CONTENT = (\n      <div className='kb-menu-primary-bottom-controls'>\n        {this.props.username ? (\n          <a className='kb-menu-link' onClick={() => {this.props.updateView(views.ADD_FOLLOWER)}}>Follow a New User</a>\n        ) : (\n          <span><a className='kb-menu-link' onClick={() => {this.props.updateView(views.LOGIN)}}>Log In</a><span> to Follow Users</span></span>\n        )}\n      </div>\n    )\n\n    const usernameContent = this.props.username\n    ? (\n      <div>\n        <div className='kb-menu-important'>\n          <span className='kb-menu-bolder'>Username: </span>\n          {this.props.username}\n        </div>\n        <div className='kb-menu-primary-bottom-controls'>\n          <a className='kb-menu-link' onClick={this.props.logout}>Log Out</a>\n        </div>\n      </div>\n    )\n    : DEFAULT_LOGIN_CONTENT\n\n    const currentSessionContent = this.props.sessionName\n      ? (\n        <div>\n          <div className='kb-menu-important'>\n            <span className='kb-menu-bolder'>Name: </span>\n            {this.props.sessionName}\n          </div>\n          <div className='kb-menu-important'>\n            <span className='kb-menu-bolder'>ID: </span>\n            {this.props.sessionID}\n          </div>\n          <div className='kb-menu-primary-bottom-controls'>\n            <a className='kb-menu-link' onClick={this.props.leaveSession}>Leave</a>\n            <span> • </span>\n            <a className='kb-menu-link' onClick={() => {this.props.updateView(views.JOIN)}}>Switch</a>\n          </div>\n        </div>\n      )\n      : DEFAULT_CURRENT_SESSION_CONTENT\n\n    const mySessionContent = this.props.mySessionID ? (\n      <div>\n        <div className='kb-menu-important'>\n          <span className='kb-menu-bolder'>Name: </span> {this.props.mySessionName}\n        </div>\n        <div className='kb-menu-important'>\n          <span className='kb-menu-bolder'>ID: </span> {this.props.mySessionID}\n        </div>\n        <div className='kb-menu-primary-bottom-controls'>\n          {this.props.sessionID !== this.props.mySessionID ? (\n            <span>\n              <a className='kb-menu-link' onClick={() => this.props.updateSession(this.props.mySessionID, this.props.mySessionName)}>Rejoin</a>\n              <span> • </span>\n            </span>\n          ) : null}\n          <a className='kb-menu-link' onClick={this.props.deleteMySession}>End</a>\n        </div>\n      </div>\n    ) : DEFAULT_MY_SESSION_CONTENT\n\n    const followingListContent = (this.props.following && this.props.following.length > 0)\n      ? this.props.following.map(rawUserData => {\n          let username = Object.keys(rawUserData)[0]\n          let userInfo = rawUserData[username]\n          return (\n            <div className='kb-following' key={username}>\n              <div className='kb-following-username'>{username}</div>\n              {userInfo.session_id ? <div className='kb-following-session-header'>Current Session</div> : null}\n              {userInfo.session_id ? (\n                <div className='kb-following-subinfo'>\n                  <span className='kb-following-subinfo-label'>Name: </span>{userInfo.session_name}\n                </div>)\n              : null}\n              {(userInfo.session_id && userInfo.now_playing) ? (\n                <div className='kb-following-subinfo'>\n                  <span className='kb-following-subinfo-label'>Now Playing: </span>{userInfo.now_playing.name}\n                </div>)\n              : null}\n              <div className='kb-following-controls'>\n                {userInfo.session_id ? (\n                  <span>\n                    <a className='kb-menu-link' onClick={() => this.props.joinSession(userInfo.session_id)}>Join Session</a>\n                    <span> • </span>\n                  </span>\n                ) : null}\n                <a className='kb-menu-link' onClick={() => this.props.unfollowUser(username)}>Unfollow</a>\n              </div>\n            </div>\n          )\n      })\n      : null\n\n    return (\n      <div className='kb-menu-primary-view'>\n        <div className='kb-menu-primary-view-section'>\n          <div className='kb-menu-primary-view-section-title'> Account Info </div>\n          <div className='kb-menu-primary-view-section-content'> {usernameContent} </div>\n        </div>\n        <div className='kb-menu-primary-view-section'>\n          <div className='kb-menu-primary-view-section-title'> My Session </div>\n          <div className='kb-menu-primary-view-section-content'> {mySessionContent} </div>\n        </div>\n        <div className='kb-menu-primary-view-section'>\n          <div className='kb-menu-primary-view-section-title'> Current Session </div>\n          <div className='kb-menu-primary-view-section-content'> {currentSessionContent} </div>\n        </div>\n        <div className='kb-menu-primary-view-section'>\n          <div className='kb-menu-primary-view-section-title'> Following </div>\n          <div className='kb-menu-primary-view-section-content'> {DEFAULT_FOLLOWING_LIST_CONTENT} {followingListContent} </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nKBMenuPrimaryView.propTypes = {\n  updateView: PropTypes.func,\n  logout: PropTypes.func,\n  leaveSession: PropTypes.func,\n  updateSession: PropTypes.func,\n  joinSession: PropTypes.func,\n  deleteMySession: PropTypes.func,\n  deleteAccount: PropTypes.func,\n  username: PropTypes.string,\n  sessionName: PropTypes.string,\n  sessionID: PropTypes.string,\n  mySessionID: PropTypes.string,\n  mySessionName: PropTypes.string,\n  following: PropTypes.array,\n  unfollowUser: PropTypes.func\n}\n\nexport default KBMenuPrimaryView","export const UPDATE_USER_LOCALLY = 'UPDATE_USER_LOCALLY'\n\nexport default function updateUserLocally(newUserId) {\n  return {\n    type: UPDATE_USER_LOCALLY,\n    newUserId\n  }\n}","export const UPDATE_USER_OWNED_SESSION_LOCALLY = 'UPDATE_USER_OWNED_SESSION_LOCALLY'\n\nexport default function updateUserOwnedSessionLocally(sessionID, sessionName) {\n  return {\n    type: UPDATE_USER_OWNED_SESSION_LOCALLY,\n    sessionID,\n    sessionName\n  }\n}","import updateUserOwnedSessionLocally from './updateUserOwnedSessionLocally'\n\nfunction safeNull(obj) {\n  if (!obj) {\n    return null\n  }\n  return obj\n}\n\nexport default function updateUserOwnedSession() {\n  return function(dispatch, getState) {\n    const URL = `https://frabric.herokuapp.com/get_owned_session?owner=${getState().user.id}`\n\n    fetch(URL).then(\n      response => response.json(),\n      error => console.log('An error occurred.', error)\n    ).then(json => {\n      dispatch(updateUserOwnedSessionLocally(safeNull(json.session_id), safeNull(json.session_name)))\n    })\n  }\n}","export const FOLLOWING_REQUEST_RESULTS = 'FOLLOWING_REQUEST_RESULTS'\n\nexport default function requestFollowing(requestedAt) {\n  return {\n    type: FOLLOWING_REQUEST_RESULTS,\n    requestedAt\n  }\n}","export const FOLLOWING_RECEIVE_RESULTS = 'FOLLOWING_RECEIVE_RESULTS'\n\nexport default function receiveFollowing(requestedAt, items) {\n  return {\n    type: FOLLOWING_RECEIVE_RESULTS,\n    items,\n    requestedAt,\n    receivedAt: Date.now()\n  }\n}","import requestFollowing from './requestFollowing.js'\nimport receiveFollowing from './receiveFollowing.js'\n\nexport default function fetchFollowing() {\n  return function(dispatch, getState) {\n\n    let requestedAt = Date.now()\n    dispatch(requestFollowing(requestedAt))\n\n    if (!getState().user.id) {\n      dispatch(receiveFollowing(requestedAt, []))\n    }\n\n    return fetch(`https://frabric.herokuapp.com/get_following/?username=${getState().user.id}`)\n      .then(\n        response => response.json(),\n        error => console.log('An error occurred.', error)\n      )\n      .then(json => {\n        dispatch(receiveFollowing(requestedAt, json))\n      })\n  }\n}","import * as io from 'socket.io-client'\n\nlet socket\n\nexport const initializeSocket = (mesg) => {\n  socket = io('https://kickback-socket-server.herokuapp.com/')\n  return socket\n}\n\nexport const getSocket = () => {\n  return socket\n}","import updateUserLocally from './updateUserLocally'\nimport refreshUser from './refreshUser'\nimport localforage from \"localforage\"\nimport { getSocket } from '../../utilities/socket-context'\n\nexport default function updateUser(newUserId) {\n  return function(dispatch, getState) {\n\n    let socket = getSocket()\n\n    if (getState().user.id) {\n      socket.emit('leave', getState().user.id)\n    }\n    if (newUserId) {\n      socket.emit('join', newUserId)\n    }\n\n    localforage.setItem('kb-username', newUserId).then(() => {\n      return localforage.getItem('kb-username')\n    }).then(value => {\n      dispatch(updateUserLocally(newUserId))\n      dispatch(refreshUser())\n    })\n\n  }\n}","import updateUserOwnedSession from './updateUserOwnedSession'\nimport fetchFollowing from './fetchFollowing'\n\nexport default function refreshUser() {\n  return function(dispatch, getState) {\n      dispatch(updateUserOwnedSession())\n      dispatch(fetchFollowing())\n  }\n}","export const UPDATE_SESSION_LOCALLY = 'UPDATE_SESSION_LOCALLY'\n\nexport default function updateSessionLocally(newSessionID, newSessionName) {\n  return {\n    type: UPDATE_SESSION_LOCALLY,\n    newSessionID,\n    newSessionName\n  }\n}","export const CHAT_REQUEST_RESULTS = 'CHAT_REQUEST_RESULTS'\n\nexport default function requestChat(requestedAt) {\n  return {\n    type: CHAT_REQUEST_RESULTS,\n    requestedAt\n  }\n}","export const CHAT_RECEIVE_RESULTS = 'CHAT_RECEIVE_RESULTS'\n\nexport default function receiveChat(requestedAt, items) {\n  return {\n    type: CHAT_RECEIVE_RESULTS,\n    items,\n    requestedAt,\n    receivedAt: Date.now()\n  }\n}","import requestChat from './requestChat.js'\nimport receiveChat from './receiveChat.js'\n\nexport default function fetchChat() {\n  return function(dispatch, getState) {\n\n    let requestedAt = Date.now()\n    dispatch(requestChat(requestedAt))\n\n    if (!getState().session.id) {\n      dispatch(receiveChat(requestedAt, []))\n    }\n\n    return fetch(`https://frabric.herokuapp.com/retrieve_chat/?session_id=${getState().session.id}`)\n      .then(\n        response => response.json(),\n        error => console.log('An error occurred.', error)\n      )\n      .then(json => {\n        dispatch(receiveChat(requestedAt, json))\n      })\n  }\n}","import localforage from 'localforage'\nimport updateSessionLocally from './updateSessionLocally'\nimport refreshSession from './refreshSession'\nimport { getSocket } from '../../utilities/socket-context'\n\nexport default function updateSession(newSessionID, newSessionName) {\n  return function(dispatch, getState) {\n\n    let socket = getSocket()\n\n    if (getState().session.id) {\n      socket.emit('leave', getState().session.id)\n    }\n    if (newSessionID) {\n      socket.emit('join', newSessionID)\n    }\n\n    localforage.setItem('kb-session', {id: newSessionID, name: newSessionName}).then(() => {\n      return localforage.getItem('kb-session')\n    }).then(sessionInfo => {\n      dispatch(updateSessionLocally(sessionInfo.id, sessionInfo.name))\n      dispatch(refreshSession())\n    })\n\n  }\n}","import fetchItems from '../queue/fetchItems'\nimport updateUserOwnedSession from '../user/updateUserOwnedSession'\nimport fetchChat from '../chat/fetchChat'\n\nexport default function refreshSession() {\n  return function(dispatch, getState) {\n      dispatch(fetchItems())\n      dispatch(updateUserOwnedSession())\n      dispatch(fetchChat())\n  }\n}","export const UPDATE_MENU_FORM_FIELD = 'UPDATE_MENU_FORM_FIELD'\n\nexport default function updateMenuFormField(field, newVal) {\n  return {\n    type: UPDATE_MENU_FORM_FIELD,\n    field,\n    newVal\n  }\n}","import { connect } from 'react-redux'\nimport KBMenuPrimaryView from '../../components/KBMenuPrimaryView'\nimport updateCurrentMenuView from '../../actions/menu/updateCurrentMenuView'\nimport updateUser from '../../actions/user/updateUser'\nimport deleteOwnedSession from '../../actions/user/deleteOwnedSession'\nimport updateSession from '../../actions/session/updateSession'\nimport unfollowUser from '../../actions/user/unfollowUser'\nimport updateMenuFormField from '../../actions/menu/updateMenuFormField'\nimport { views } from '../../reducers/menu/currentView'\n\nconst mapStateToProps = state => {\n  return {\n    username: state.user.id,\n    sessionName: state.session.name,\n    sessionID: state.session.id,\n    mySessionID: state.user.session.id,\n    mySessionName: state.user.session.name,\n    following: state.user.following.items\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateView: view => {\n      dispatch(updateCurrentMenuView(view))\n    },\n    logout: () => {\n      dispatch(updateUser(null))\n    },\n    leaveSession: () => {\n      dispatch(updateSession(null, null))\n    },\n    joinSession: (sessionID) => {\n      dispatch(updateCurrentMenuView(views.JOIN))\n      dispatch(updateMenuFormField('sessionID', sessionID))\n    },\n    updateSession: (sessionID, sessionName) => {\n      dispatch(updateSession(sessionID, sessionName))\n    },\n    deleteMySession: () => {\n      dispatch(deleteOwnedSession())\n    },\n    unfollowUser: following => {\n      dispatch(unfollowUser(following))\n    }\n  }\n}\n\nconst KBMenuPrimaryViewContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(KBMenuPrimaryView)\n\nexport default KBMenuPrimaryViewContainer","import updateUserOwnedSessionLocally from './updateUserOwnedSessionLocally'\nimport updateSession from '../session/updateSession'\n\nexport default function deleteOwnedSession() {\n  return function(dispatch, getState) {\n\n    let DELETE_URL = `https://frabric.herokuapp.com/end_session?session_id=${getState().user.session.id}`\n\n    fetch(DELETE_URL).then(response => {\n      if (response.ok) {\n        if (getState().session.id === getState().user.session.id) {\n          dispatch(updateSession(null, null))\n        }\n        dispatch(updateUserOwnedSessionLocally(null, null))\n      }\n    })\n\n  }\n}","import fetchFollowing from './fetchFollowing'\n\nexport default function unfollowUser(following) {\n  return function(dispatch, getState) {\n\n    return fetch(`https://frabric.herokuapp.com/unfollow_user/?follower=${getState().user.id}&following=${following}`)\n      .then(\n        error => console.log('An error occurred.', error)\n      )\n      .then(response => {\n        dispatch(fetchFollowing())\n      })\n\n  }\n}","import React, { Component } from 'react'\nimport PatientSearchBar from '../PatientSearchBar'\nimport PropTypes from 'prop-types'\nimport './KBFormInputBar.scss'\n\nclass KBFormInputBar extends Component {\n  render() {\n    return (\n      <div className='kb-form-input-bar-container'>\n        <div className='kb-form-input-bar-header'>\n          {this.props.label}\n        </div>\n        <PatientSearchBar\n          placeholder={this.props.placeholder}\n          value={this.props.value}\n          onChange={this.props.onChange}\n          className=\"kb-form-input-bar-text\"\n        />\n      </div>\n    )\n  }\n}\n\nKBFormInputBar.propTypes = {\n  placeholder: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  label: PropTypes.string\n}\n\nexport default KBFormInputBar","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport './KBMenuFormView.scss'\nimport '../KBMenuPrimaryView/KBMenuPrimaryView.scss'\nimport KBFormInputBar from '../KBFormInputBar'\n\nclass KBMenuFormView extends Component {\n\n  render() {\n\n    const inputs = this.props.formInfo.inputs\n    const inputContent = Object.keys(inputs).map(field => (\n      <KBFormInputBar\n        label={inputs[field].label}\n        placeholder={inputs[field].placeholder}\n        value={inputs[field].value}\n        onChange={newVal => this.props.onInputChange(field, newVal)}\n        key={field}\n      />\n    ))\n\n    return (\n      <div className='kb-menu-form-view'>\n        <div className='kb-menu-form-header'>\n          {this.props.formInfo.title}\n        </div>\n        <div className='kb-menu-form-view-input-container'>\n          {inputContent}\n        </div>\n        <div className='kb-menu-form-view-error'>\n          {this.props.formInfo.error}\n        </div>\n        <div className='kb-menu-form-view-controls'>\n          <div className='kb-menu-form-view-submit'>\n            <a className='kb-menu-link' onClick={this.props.onSubmit}>{this.props.formInfo.submitLabel}</a>\n          </div>\n          <div className='kb-menu-form-view-cancel'>\n            <a className='kb-menu-link' onClick={this.props.onCancel}>Cancel</a>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nKBMenuFormView.propTypes = {\n  formInfo: PropTypes.object,\n  onCancel: PropTypes.func,\n  onSubmit: PropTypes.func,\n  onInputChange: PropTypes.func\n}\n\nexport default KBMenuFormView","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { views } from '../../reducers/menu/currentView.js'\nimport KBMenuPrimaryViewContainer from '../../containers/KBMenuPrimaryViewContainer'\nimport KBMenuFormView from '../KBMenuFormView'\nimport './KBMenu.scss'\n\n\nclass KBMenu extends Component {\n  render() {\n\n    var viewContent = null\n    switch (this.props.currentView) {\n      case views.PRIMARY:\n        viewContent = <KBMenuPrimaryViewContainer/>\n        break\n      case views.LOGIN:\n      case views.SIGN_UP:\n      case views.CREATE:\n      case views.ADD_FOLLOWER:\n      case views.JOIN:\n        viewContent = <KBMenuFormView\n          formInfo={this.props.formInfo}\n          onInputChange={this.props.onInputChange}\n          onSubmit={()=> {this.props.onSubmit(this.props.formInfo)}}\n          onCancel={() => {this.props.updateView(views.PRIMARY)}}\n        />\n        break\n      default:\n        viewContent = <div> Error </div>\n        break\n    }\n\n    return (\n      <div className='kb-menu'>\n        <div className='kb-menu-title'>\n          Menu\n        </div>\n        {viewContent}\n      </div>\n    )\n  }\n}\n\nKBMenu.propTypes = {\n  currentView: PropTypes.string,\n  updateView: PropTypes.func,\n  onInputChange: PropTypes.func,\n  formInfo: PropTypes.object\n}\n\nexport default KBMenu","export const UPDATE_MENU_FORM_ERROR = 'UPDATE_MENU_FORM_ERROR'\n\nexport default function updateMenuFormError(newError) {\n  return {\n    type: UPDATE_MENU_FORM_ERROR,\n    newError\n  }\n}","import updateMenuFormError from './updateMenuFormError'\nimport updateCurrentMenuView from './updateCurrentMenuView'\nimport updateUser from '../user/updateUser'\nimport updateSession from '../session/updateSession'\nimport followUser from '../user/followUser'\nimport { views } from '../../reducers/menu/currentView'\n\nfunction safeNull(obj) {\n  if (!obj) {\n    return null\n  }\n  return obj\n}\n\nexport default function submitMenuForm(formInfo) {\n  return function(dispatch, getState) {\n\n    dispatch(updateMenuFormError(''))\n\n    const BASE_URL = 'https://frabric.herokuapp.com/'\n    var url = null;\n\n    // Build form submission url based on form inputs\n    switch (formInfo.id) {\n      case views.LOGIN:\n        url = BASE_URL + `validate_user?username=${formInfo.inputs.username.value}&password=${formInfo.inputs.password.value}`\n        break\n      case views.SIGN_UP:\n        url = BASE_URL + `create_user?username=${formInfo.inputs.username.value}&password=${formInfo.inputs.password.value}`\n        break\n      case views.JOIN:\n        url = BASE_URL + `validate_session?session_id=${formInfo.inputs.sessionID.value}&session_password=${formInfo.inputs.sessionPassword.value}`\n        break\n      case views.CREATE:\n        url = BASE_URL + `create_session?session_id=${formInfo.inputs.sessionID.value}&session_password=${formInfo.inputs.sessionPassword.value}` +\n          `&session_name=${formInfo.inputs.sessionName.value}&owner=${getState().user.id}`\n        break\n      case views.ADD_FOLLOWER:\n        handle(() => dispatch(followUser(formInfo.inputs.username.value)))\n        return\n      default:\n        break\n    }\n\n    // Submit form data to endpoint\n    handle(() => fetch(url))\n\n    function handle(promise) {\n      promise().then(function(response) {\n        handleError(formInfo, response)\n        return response\n      }).then(function(response) {\n        handleSuccess(formInfo, response)\n      }).catch(function(error) {\n          console.log(error)\n      })\n    }\n\n    function handleError(formInfo, response) {\n      if (!response.ok) {\n        response.text().then(errorText => dispatch(updateMenuFormError(errorText)))\n      }\n    }\n\n    function handleSuccess(formInfo, response) {\n      if (response.ok) {\n        switch (formInfo.id) {\n          case views.LOGIN:\n          case views.SIGN_UP:\n            dispatch(updateUser(formInfo.inputs.username.value))\n            break\n          case views.CREATE:\n          case views.JOIN:\n            response.text().then(text => {\n              response = JSON.parse(text)\n              dispatch(updateSession(safeNull(response.session_id), safeNull(response.session_name)))\n            })\n            break\n          default:\n            break\n        }\n        dispatch(updateCurrentMenuView(views.PRIMARY))\n      }\n    }\n\n  }\n}\n","import fetchFollowing from './fetchFollowing'\n\nexport default function followUser(following) {\n  return function(dispatch, getState) {\n\n    return fetch(`https://frabric.herokuapp.com/follow_user/?follower=${getState().user.id}&following=${following}`)\n      .then(response => {\n        dispatch(fetchFollowing())\n        return response\n      })\n  }\n}","import { connect } from 'react-redux'\nimport KBMenu from '../../components/KBMenu'\nimport updateCurrentMenuView from '../../actions/menu/updateCurrentMenuView'\nimport updateMenuFormField from '../../actions/menu/updateMenuFormField.js'\nimport submitMenuForm from '../../actions/menu/submitMenuForm.js'\n\nconst mapStateToProps = state => {\n  return {\n    currentView: state.menu.currentView,\n    formInfo: state.menu.formInfo\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateView: view => {\n      dispatch(updateCurrentMenuView(view))\n    },\n    onInputChange: (field, newVal) => {\n      dispatch(updateMenuFormField(field, newVal))\n    },\n    onSubmit: formInfo => {\n      dispatch(submitMenuForm(formInfo))\n    }\n  }\n}\n\nconst KBMenuContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(KBMenu)\n\nexport default KBMenuContainer","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport PatientSearchBar from '../PatientSearchBar'\nimport { MDBIcon } from 'mdbreact'\nimport './KBChat.scss'\n\nclass KBChat extends Component {\n\n  render() {\n\n    const chatList = this.props.messages.map((messageInfo, messageId) => {\n      return (\n        <div key={messageId} className='kb-chat-message-box'>\n          <span className='kb-chat-message-title'>{messageInfo.username}: </span>\n          {messageInfo.message}\n        </div>\n      )\n    })\n\n    return (\n      <div className='kb-chat'>\n        <div className='kb-chat-title'>\n          Chat\n        </div>\n        <div className='kb-chat-list-container'>\n          <div className='kb-chat-top-spacer'/>\n          {chatList}\n        </div>\n        <div className='kb-menu-control-container'>\n          <PatientSearchBar\n            placeholder={'Enter a message...'}\n            value={this.props.inputText}\n            onChange={this.props.updateText}\n            className=\"kb-menu-chat-text-box\"\n          />\n          <div className='kb-menu-chat-button' onClick={this.props.sendMessage}>\n            <MDBIcon icon='paper-plane'/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nKBChat.propTypes = {\n  messages: PropTypes.array,\n  inputText: PropTypes.string,\n  updateText: PropTypes.func,\n  sendMessage: PropTypes.func\n}\n\nexport default KBChat","export const CHAT_UPDATE_INPUT_TEXT = 'CHAT_UPDATE_INPUT_TEXT'\n\nexport default function updateChatInputText(newText) {\n  return {\n    type: CHAT_UPDATE_INPUT_TEXT,\n    newText\n  }\n}","import { connect } from 'react-redux'\nimport KBChat from '../../components/KBChat'\nimport updateChatInputText from '../../actions/chat/updateChatInputText'\nimport sendMessage from '../../actions/chat/sendMessage'\n\nconst mapStateToProps = state => {\n  return {\n    messages: (state.chat.data.items || []),\n    inputText: state.chat.inputText\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateText: newText => {\n      dispatch(updateChatInputText(newText))\n    },\n    sendMessage: () => {\n      dispatch(sendMessage())\n    }\n  }\n}\n\nconst KBChatContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(KBChat)\n\nexport default KBChatContainer","import fetchChat from './fetchChat.js'\nimport updateChatInputText from './updateChatInputText'\n\nexport default function sendMessage() {\n  return function(dispatch, getState) {\n\n    let userId = getState().user.id ? getState().user.id : 'Guest'\n    let sessionId = getState().session.id\n    let message = getState().chat.inputText\n    let ADD_URL = `https://frabric.herokuapp.com/add_to_chat/?session_id=${sessionId}&username=${userId}&message=${message}`\n\n    // dispatch(addTOCHATLocally(uri)) TOO LAZY TO DO THIS RN\n\n    fetch(ADD_URL).then(\n      error => console.log('An error occurred.', error)\n    ).then(response => {\n      dispatch(fetchChat())\n      dispatch(updateChatInputText(''))\n    })\n\n  }\n}","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport KBQueueContainer from '../../containers/KBQueueContainer'\nimport KBNowPlayingContainer from '../../containers/KBNowPlayingContainer'\nimport KBSearchResultListContainer from '../../containers/KBSearchResultListContainer'\nimport KBControlPanelNavBarContainer from '../../containers/KBControlPanelNavBarContainer'\nimport KBMenuContainer from '../../containers/KBMenuContainer'\nimport KBChatContainer from '../../containers/KBChatContainer'\nimport {tabs} from '../../reducers/tab/current.js'\nimport './KBControlPanel.scss'\n\n\nexport class KBControlPanel extends Component {\n\n  render() {\n\n    var mainTab = undefined\n    switch (this.props.currentTab) {\n      case tabs.SEARCH:\n        mainTab = <KBSearchResultListContainer/>\n        break\n      case tabs.QUEUE:\n        mainTab = <KBQueueContainer/>\n        break\n      case tabs.NOW_PLAYING:\n        mainTab = <KBNowPlayingContainer/>\n        break\n      default:\n        mainTab = <div> Error </div>\n        break\n    }\n\n    const menu = this.props.isMenuOpen ? <KBMenuContainer/> : null\n    const chat = this.props.isChatOpen ? <KBChatContainer/> : null\n\n    return (\n      <div className='kb-control-panel'>\n        {menu}\n        <div className='kb-center-control'>\n          <KBControlPanelNavBarContainer/>\n          {mainTab}\n        </div>\n        {chat}\n      </div>\n    )\n  }\n\n}\n\nKBControlPanel.propTypes = {\n  currentTab: PropTypes.string,\n  isMenuOpen: PropTypes.bool,\n  isChatOpen: PropTypes.bool\n}\n\nexport default KBControlPanel","import { connect } from 'react-redux'\nimport KBControlPanel from '../../components/KBControlPanel'\nimport updateCurrent from '../../actions/tab/updateCurrent'\n\nconst mapStateToProps = state => {\n  return {\n    items: state.search.results.items || [],\n    currentTab: state.tab.current,\n    isMenuOpen: state.menu.isOpen,\n    isChatOpen: state.chat.isOpen\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n  }\n}\n\nconst KBControlPanelContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(KBControlPanel)\n\nexport default KBControlPanelContainer","export const UPDATE_ACCESS_TOKEN_LOCALLY = 'UPDATE_ACCESS_TOKEN_LOCALLY'\n\nexport default function updateAccessTokenLocally(newAccessToken) {\n  return {\n    type: UPDATE_ACCESS_TOKEN_LOCALLY,\n    newAccessToken\n  }\n}","import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport SpotifyWebApi from 'spotify-web-api-node'\n\n// Spotify Authorization variables\nconst authEndpoint = 'https://accounts.spotify.com/authorize'\nconst clientId = \"c7068e47edfd40ce947f93adfc20eb96\"\n// const redirectUri = \"http://localhost:3000\"\nconst redirectUri = \"https://zivkaputa.github.io/kickback-redux\"\nconst scopes = [\n  \"user-read-currently-playing\",\n  \"user-read-playback-state\",\n  \"user-modify-playback-state\",\n  \"streaming\"\n]\nconst authorizeURL = `${authEndpoint}?client_id=${clientId}&redirect_uri=${encodeURIComponent(redirectUri)}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`\n\n// Spotify API object used to interact with songs\nvar spotifyApi = new SpotifyWebApi({\n  clientId: clientId,\n  redirectUri: redirectUri\n});\n\n// Helper function to get hash parameters from redirect URI\n// From https://stackoverflow.com/questions/11920697/how-to-get-hash-value-in-a-url-in-js\nfunction getHashValue(key) {\n  var matches = window.location.hash.match(new RegExp(key+'=([^&]*)'));\n  return matches ? matches[1] : null;\n}\n\n// Uses the specified player to play the given track\nconst play = ({\n  spotify_uri,\n  playerInstance: {\n    _options: {\n      getOAuthToken,\n      id\n    }\n  }\n}) => {\n  getOAuthToken(access_token => {\n    fetch(`https://api.spotify.com/v1/me/player/play?device_id=${id}`, {\n      method: 'PUT',\n      body: JSON.stringify({ uris: [spotify_uri] }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${access_token}`\n      },\n    });\n  });\n};\n\n// Wrapper component used to interact with Spotify and manage song playback\nclass KBSpotifyManager extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.handleAuthorization = this.handleAuthorization.bind(this)\n    this.playSong = this.playSong.bind(this)\n    this.pauseSong = this.pauseSong.bind(this)\n    this.checkAuthorization = this.checkAuthorization.bind(this)\n    this.initializePlayer = this.initializePlayer.bind(this)\n    this.player = null\n    this.fresh = true\n    this.lastSong = null;\n  }\n\n  checkAuthorization() {\n    if (!this.props.accessToken) {\n      this.handleAuthorization()\n    }\n  }\n\n  handleAuthorization() {\n    window.location = authorizeURL\n  }\n\n  initializePlayer() {\n    var player = new window.Spotify.Player({\n      name: 'Kickback Player',\n      getOAuthToken: callback => {\n        callback(this.props.accessToken)\n      },\n      volume: 0.5\n    })\n\n    player.addListener('ready', ({ device_id }) => {\n      this.player = player\n    })\n\n    player.addListener('player_state_changed', spotifyPlayerState => {\n      if (spotifyPlayerState.position === 0 && spotifyPlayerState.paused && this.props.isPlaying) {\n        if (this.props.currentTrack && (this.lastSong != this.props.currentTrack.id)) {\n          this.lastSong = this.props.currentTrack.id\n          this.props.skipSong()\n        }\n      }\n    })\n\n    player.connect().then(success => {\n      if (success) {\n        console.log('The Web Playback SDK successfully connected to Spotify!')\n      }\n    })\n  }\n\n  playSong(uri, playFromStart) {\n\n    if (playFromStart) {\n      play({\n        playerInstance: this.player,\n        spotify_uri: uri\n      })\n    } else {\n      this.player.resume().then(() => {\n        console.log('Resumed!');\n      })\n    }\n\n  }\n\n  pauseSong() {\n    this.player.pause().then(() => {\n      console.log('Paused!');\n    });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n\n    if (this.player && (!nextProps.currentTrack || !this.props.playerActive)) {\n      this.pauseSong()\n      this.props.setPaused()\n    } else if (this.player && this.props.playerActive) {\n      // Load a new song\n      let isNewSong = (!nextProps.currentTrack || !this.props.currentTrack || (nextProps.currentTrack.id != this.props.currentTrack.id))\n      if (isNewSong) {\n        this.fresh = true\n      }\n      if (nextProps.isPlaying && nextProps.currentTrack && (isNewSong || this.fresh)) {\n        this.playSong(nextProps.currentTrack.uri, true)\n        this.fresh = false;\n      // Continue current song\n      } else if (nextProps.currentTrack && nextProps.isPlaying) {\n        this.playSong(null, false)\n      // Pause current song\n      } else if (nextProps.currentTrack && !nextProps.isPlaying) {\n        this.pauseSong()\n      }\n    }\n    return true;\n  }\n\n  render() {\n\n    if (this.props.playerActive) {\n\n      if (window.Spotify && !this.player) {\n        this.initializePlayer()\n      } else if (!window.Spotify && !this.player) {\n        window.onSpotifyWebPlaybackSDKReady = () => {\n          this.initializePlayer()\n        }\n      }\n\n      // Token request was succesful, parse token from URL\n      const accessToken = getHashValue('access_token')\n      if (accessToken) {\n        this.props.updateAccessToken(accessToken)\n        window.history.replaceState(null, null, '/kickback-redux')\n        return null\n      }\n\n\n      // No token currently stored, need to request a new token\n      if (!this.props.accessToken && this.props.playerActive) {\n        this.handleAuthorization()\n      }\n\n    }\n\n    return null\n  }\n\n}\n\n\nKBSpotifyManager.propTypes = {\n  accessToken: PropTypes.string,\n  updateAccessToken: PropTypes.func,\n  playerActive: PropTypes.bool,\n  currentTrack: PropTypes.object,\n  isPlaying: PropTypes.bool,\n  skipSong: PropTypes.func,\n  setPaused: PropTypes.func\n}\n\nexport default KBSpotifyManager\n","import { connect } from 'react-redux'\nimport updateAccessTokenLocally from '../../actions/spotify/updateAccessTokenLocally'\nimport KBSpotifyManager from '../../components/KBSpotifyManager'\nimport skipSong from '../../actions/spotify/skipSong'\nimport updateIsPlaying from '../../actions/spotify/updateIsPlaying'\n\nconst mapStateToProps = state => {\n  return {\n    accessToken: state.spotify.accessToken,\n    playerActive: (state.user.session.id && (state.user.session.id === state.session.id)),\n    currentTrack: (state.queue.data.items.length > 0) ? {uri: ('spotify:track:' + state.queue.data.items[0].uri), id: state.queue.data.items[0].song_id} : null,\n    isPlaying: state.spotify.isPlaying\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateAccessToken: accessToken => {\n      dispatch(updateAccessTokenLocally(accessToken))\n    },\n    skipSong: () => {\n      dispatch(skipSong())\n    },\n    setPaused: () => {\n      dispatch(updateIsPlaying(false))\n    }\n  }\n}\n\nconst KBSpotifyManagerContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(KBSpotifyManager)\n\nexport default KBSpotifyManagerContainer","import React, { Component } from 'react'\nimport logo from './logo.svg'\nimport KBControlPanelContainer from './containers/KBControlPanelContainer'\nimport KBNavBar from './components/KBNavBar'\nimport KBSpotifyManagerContainer from './containers/KBSpotifyManagerContainer'\nimport { ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport './App.scss'\n\nclass App extends Component {\n  render() {\n\n    return (\n      <div className=\"App\">\n        <KBSpotifyManagerContainer/>\n        <KBNavBar type='primary'>Kickback</KBNavBar>\n        <KBControlPanelContainer/>\n        <ToastContainer\n          toastClassName=\"kb-toast\"\n          position=\"bottom-center\"\n          autoClose={3000}\n          hideProgressBar={true}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnVisibilityChange={false}\n          draggable\n          pauseOnHover={false}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import App from './App.js'\nimport { connect } from 'react-redux'\n\nconst mapStateToProps = state => {\n  return {\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n  }\n}\n\nconst VisibleApp = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App)\n\nexport default VisibleApp","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { SEARCH_REQUEST_RESULTS } from '../../actions/search/requestResults.js'\nimport { SEARCH_UPDATE_QUERY } from '../../actions/search/updateQuery.js'\n\nconst DEFAULT_STATE = ''\n\nexport default function query(state = DEFAULT_STATE, action) {\n  switch (action.type) {\n    case SEARCH_UPDATE_QUERY:\n    case SEARCH_REQUEST_RESULTS:\n      return action.query\n    default:\n      return state\n  }\n}","import { SEARCH_UPDATE_SCROLL_POSITION } from '../../actions/search/updateScrollPosition.js'\n\nconst DEFAULT_STATE = 0\n\nexport default function scrollPosition(state = DEFAULT_STATE, action) {\n  switch (action.type) {\n    case SEARCH_UPDATE_SCROLL_POSITION:\n      return action.scrollPosition\n    default:\n      return state\n  }\n}","export const SEARCH_INVALIDATE_RESULTS = 'SEARCH_INVALIDATE_RESULTS'\n\nexport default function invalidateResults() {\n  return {\n    type: SEARCH_INVALIDATE_RESULTS,\n  }\n}","import { SEARCH_INVALIDATE_RESULTS } from '../../actions/search/invalidateResults.js'\nimport { SEARCH_RECEIVE_RESULTS } from '../../actions/search/receiveResults.js'\nimport { SEARCH_REQUEST_RESULTS } from '../../actions/search/requestResults.js'\n\nconst DEFAULT_STATE = {\n  isFetching: false,\n  didInvalidate: false,\n  lastUpdated: 0,\n  lastRequestedAt: 0,\n  lastSuccesfullyRequestedAt: 0,\n  items: []\n}\n\nexport default function results(state = DEFAULT_STATE, action) {\n  switch (action.type) {\n    case SEARCH_INVALIDATE_RESULTS:\n      return {...state, didInvalidate: true}\n    case SEARCH_RECEIVE_RESULTS:\n      if (action.requestedAt === state.lastRequestedAt) {\n        return {\n          ...state,\n          didInvalidate: false,\n          isFetching: false,\n          items: action.items,\n          lastUpdated: action.receivedAt,\n          lastSuccesfullyRequestedAt: action.requestedAt\n        }\n      } else {\n        return state\n      }\n    case SEARCH_REQUEST_RESULTS:\n      return {\n        ...state,\n        didInvalidate: false,\n        isFetching: false,\n        lastRequestedAt: action.requestedAt\n      }\n    default:\n      return state\n  }\n}","import { combineReducers } from 'redux'\nimport query from './query.js'\nimport scrollPosition from './scrollPosition.js'\nimport results from './results.js'\n\nconst search = combineReducers({\n  query,\n  scrollPosition,\n  results,\n})\n\nexport default search","export const QUEUE_INVALIDATE_ITEMS = 'QUEUE_INVALIDATE_ITEMS'\n\nexport default function invalidateItems() {\n  return {\n    type: QUEUE_INVALIDATE_ITEMS,\n  }\n}","import { QUEUE_INVALIDATE_ITEMS } from '../../actions/queue/invalidateItems.js'\nimport { QUEUE_RECEIVE_ITEMS } from '../../actions/queue/receiveItems.js'\nimport { QUEUE_REQUEST_ITEMS } from '../../actions/queue/requestItems.js'\nimport { QUEUE_ADD_ITEM_LOCALLY } from '../../actions/queue/addItemLocally.js'\nimport { QUEUE_DELETE_ITEM_LOCALLY } from '../../actions/queue/deleteItemLocally.js'\nimport { QUEUE_REORDER_ITEMS_LOCALLY } from '../../actions/queue/reorderItemsLocally.js'\n\nconst DEFAULT_STATE = {\n  isFetching: false,\n  didInvalidate: false,\n  lastUpdated: 0,\n  lastRequestedAt: 0,\n  lastSuccesfullyRequestedAt: 0,\n  items: []\n}\n\nexport default function data(state = DEFAULT_STATE, action) {\n  switch (action.type) {\n    case QUEUE_DELETE_ITEM_LOCALLY:\n      let newItemsDelete = Array.from(state.items)\n      newItemsDelete.splice(action.deleteItemId, 1)\n      return {...state, didInvalidate: true, items: newItemsDelete}\n    case QUEUE_REORDER_ITEMS_LOCALLY:\n      let newItemsReorder = Array.from(state.items)\n      let movedItemReorder = newItemsReorder[action.fromId]\n      newItemsReorder.splice(action.fromId, 1)\n      newItemsReorder.splice(action.toId, 0, movedItemReorder)\n      return {...state, didInvalidate: true, items: newItemsReorder}\n    case QUEUE_ADD_ITEM_LOCALLY:\n      return {...state, didInvalidate: true, items:[...state.items, action.item]}\n    case QUEUE_INVALIDATE_ITEMS:\n      return {...state, didInvalidate: true}\n    case QUEUE_RECEIVE_ITEMS:\n      if (action.requestedAt === state.lastRequestedAt) {\n        return {\n          ...state,\n          didInvalidate: false,\n          isFetching: false,\n          items: action.items,\n          lastUpdated: action.receivedAt,\n          lastSuccesfullyRequestedAt: action.requestedAt\n        }\n      } else {\n        return state\n      }\n    case QUEUE_REQUEST_ITEMS:\n      return {\n        ...state,\n        didInvalidate: false,\n        isFetching: false,\n        lastRequestedAt: action.requestedAt\n      }\n    default:\n      return state\n  }\n}","import { QUEUE_UPDATE_SCROLL_POSITION } from '../../actions/queue/updateScrollPosition.js'\n\nconst DEFAULT_STATE = 0\n\nexport default function scrollPosition(state = DEFAULT_STATE, action) {\n  switch (action.type) {\n    case QUEUE_UPDATE_SCROLL_POSITION:\n      return action.scrollPosition\n    default:\n      return state\n  }\n}","import { combineReducers } from 'redux'\nimport data from './data.js'\nimport scrollPosition from './scrollPosition.js'\n\nconst queue = combineReducers({\n  data,\n  scrollPosition,\n})\n\nexport default queue","import { UPDATE_SESSION_LOCALLY } from '../../actions/session/updateSessionLocally.js'\n\nconst DEFAULT_STATE = null\n\nexport default function id(state = DEFAULT_STATE, action) {\n  switch (action.type) {\n    case UPDATE_SESSION_LOCALLY:\n      return action.newSessionID\n    default:\n      return state\n  }\n}","import { UPDATE_SESSION_LOCALLY } from '../../actions/session/updateSessionLocally.js'\n\nconst DEFAULT_STATE = null\n\nexport default function name(state = DEFAULT_STATE, action) {\n  switch (action.type) {\n    case UPDATE_SESSION_LOCALLY:\n      return action.newSessionName\n    default:\n      return state\n  }\n}","import { combineReducers } from 'redux'\nimport id from './id.js'\nimport name from './name.js'\n\nconst session = combineReducers({\n  id,\n  name\n})\n\nexport default session","import { UPDATE_USER_LOCALLY } from '../../actions/user/updateUserLocally.js'\n\nconst DEFAULT_STATE = null\n\nexport default function id(state = DEFAULT_STATE, action) {\n  switch (action.type) {\n    case UPDATE_USER_LOCALLY:\n      return action.newUserId\n    default:\n      return state\n  }\n}","import { UPDATE_USER_OWNED_SESSION_LOCALLY } from '../../actions/user/updateUserOwnedSessionLocally.js'\n\nconst DEFAULT_STATE = {id: null, name: null}\n\nexport default function session(state = DEFAULT_STATE, action) {\n  switch (action.type) {\n    case UPDATE_USER_OWNED_SESSION_LOCALLY:\n      return {id: action.sessionID, name: action.sessionName}\n    default:\n      return state\n  }\n}","export const FOLLOWING_INVALIDATE_RESULTS = 'FOLLOWING_INVALIDATE_RESULTS'\n\nexport default function invalidateFollowing() {\n  return {\n    type: FOLLOWING_INVALIDATE_RESULTS,\n  }\n}","import { FOLLOWING_INVALIDATE_RESULTS } from '../../actions/user/invalidateFollowing.js'\nimport { FOLLOWING_RECEIVE_RESULTS } from '../../actions/user/receiveFollowing.js'\nimport { FOLLOWING_REQUEST_RESULTS } from '../../actions/user/requestFollowing.js'\n\nconst DEFAULT_STATE = {\n  isFetching: false,\n  didInvalidate: false,\n  lastUpdated: 0,\n  lastRequestedAt: 0,\n  lastSuccesfullyRequestedAt: 0,\n  items: []\n}\n\nexport default function following(state = DEFAULT_STATE, action) {\n  switch (action.type) {\n    case FOLLOWING_INVALIDATE_RESULTS:\n      return {...state, didInvalidate: true}\n    case FOLLOWING_RECEIVE_RESULTS:\n      if (action.requestedAt === state.lastRequestedAt) {\n        return {\n          ...state,\n          didInvalidate: false,\n          isFetching: false,\n          items: action.items,\n          lastUpdated: action.receivedAt,\n          lastSuccesfullyRequestedAt: action.requestedAt\n        }\n      } else {\n        return state\n      }\n    case FOLLOWING_REQUEST_RESULTS:\n      return {\n        ...state,\n        didInvalidate: false,\n        isFetching: false,\n        lastRequestedAt: action.requestedAt\n      }\n    default:\n      return state\n  }\n}","import { combineReducers } from 'redux'\nimport id from './id.js'\nimport session from './session.js'\nimport following from './following.js'\n\nconst user = combineReducers({\n  id,\n  session,\n  following\n})\n\nexport default user","import { combineReducers } from 'redux'\nimport current from './current.js'\n\nconst tab = combineReducers({\n  current\n})\n\nexport default tab","import { MENU_TOGGLE } from '../../actions/menu/toggleMenu.js'\n\nconst DEFAULT_STATE = true\n\nexport default function isOpen(state = DEFAULT_STATE, action) {\n  switch (action.type) {\n    case MENU_TOGGLE:\n      return !state\n    default:\n      return state\n  }\n}","import { MENU_VIEW_UPDATE_CURRENT } from '../../actions/menu/updateCurrentMenuView.js'\nimport { UPDATE_MENU_FORM_FIELD } from '../../actions/menu/updateMenuFormField.js'\nimport { UPDATE_MENU_FORM_ERROR } from '../../actions/menu/updateMenuFormError.js'\nimport { views } from './currentView.js'\n\nconst DEFAULT_STATE = {}\n\nconst USERNAME_PLACEHOLDER = 'e.g. Bobby Shmurda'\nconst PASSWORD_PLACEHOLDER = 'e.g. FreeBobby2019'\nconst SESSION_ID_PLACEHOLDER = 'e.g. 12345'\nconst SESSION_NAME_PLACEHOLDER = 'e.g. Bobby\\'s Fire Beats'\n\nexport default function formInfo(state = DEFAULT_STATE, action) {\n  switch (action.type) {\n    case MENU_VIEW_UPDATE_CURRENT:\n      switch (action.currentView) {\n        case views.LOGIN:\n          return {\n            id: views.LOGIN,\n            inputs: {\n              username: {\n                label: 'Username',\n                placeholder: USERNAME_PLACEHOLDER,\n                value: ''\n              },\n              password: {\n                label: 'Password',\n                placeholder: PASSWORD_PLACEHOLDER,\n                value: ''\n              }\n            },\n            title: 'Log In to Kickback',\n            submitLabel: 'Log In',\n            error: ''\n          }\n        case views.SIGN_UP:\n          return {\n            id: views.SIGN_UP,\n            inputs: {\n              username: {\n                label: 'Username',\n                placeholder: USERNAME_PLACEHOLDER,\n                value: ''\n              },\n              password: {\n                label: 'Password',\n                placeholder: PASSWORD_PLACEHOLDER,\n                value: ''\n              }\n            },\n            title: 'Sign Up for Kickback',\n            submitLabel: 'Sign Up',\n            error: ''\n          }\n        case views.JOIN:\n          return {\n            id: views.JOIN,\n            inputs: {\n              sessionID: {\n                label: 'Session ID',\n                placeholder: SESSION_ID_PLACEHOLDER,\n                value: ''\n              },\n              sessionPassword: {\n                label: 'Session Password',\n                placeholder: PASSWORD_PLACEHOLDER,\n                value: ''\n              }\n            },\n            title: 'Join a Session',\n            submitLabel: 'Join',\n            error: ''\n          }\n        case views.CREATE:\n          return {\n            id: views.CREATE,\n            inputs: {\n              sessionName: {\n                label: 'Session Name',\n                placeholder: SESSION_NAME_PLACEHOLDER,\n                value: ''\n              },\n              sessionID: {\n                label: 'Session ID (Optional)',\n                placeholder: SESSION_ID_PLACEHOLDER,\n                value: ''\n              },\n              sessionPassword: {\n                label: 'Session Password (Optional)',\n                placeholder: PASSWORD_PLACEHOLDER,\n                value: ''\n              }\n            },\n            title: 'Create a Session',\n            submitLabel: 'Create and Join',\n            error: ''\n          }\n        case views.ADD_FOLLOWER:\n          return {\n            id: views.ADD_FOLLOWER,\n            inputs: {\n              username: {\n                label: 'Username',\n                placeholder: USERNAME_PLACEHOLDER,\n                value: ''\n              }\n            },\n            title: 'Follow a User',\n            submitLabel: 'Follow',\n            error: ''\n          }\n        default:\n          return state\n      }\n    case UPDATE_MENU_FORM_FIELD:\n      switch (state.id) {\n        case views.JOIN:\n        case views.CREATE:\n          if (action.field === 'sessionID' && action.newVal.length > 4) {\n            return state\n          }\n        default:\n          return {\n            ...state,\n            inputs: {\n              ...state.inputs,\n              [action.field]: {\n                ...state.inputs[action.field],\n                value: action.newVal\n              }\n            }\n          }\n      }\n    case UPDATE_MENU_FORM_ERROR:\n      return {...state, error: action.newError}\n    default:\n      return state\n  }\n}","import { combineReducers } from 'redux'\nimport isOpen from './isOpen.js'\nimport currentView from './currentView.js'\nimport formInfo from './formInfo.js'\n\nconst menu = combineReducers({\n  isOpen,\n  currentView,\n  formInfo\n})\n\nexport default menu","import { CHAT_TOGGLE } from '../../actions/chat/toggleChat.js'\n\nconst DEFAULT_STATE = false\n\nexport default function isOpen(state = DEFAULT_STATE, action) {\n  switch (action.type) {\n    case CHAT_TOGGLE:\n      return !state\n    default:\n      return state\n  }\n}","export const CHAT_INVALIDATE_RESULTS = 'CHAT_INVALIDATE_RESULTS'\n\nexport default function invalidateChat() {\n  return {\n    type: CHAT_INVALIDATE_RESULTS,\n  }\n}","import { CHAT_INVALIDATE_RESULTS } from '../../actions/chat/invalidateChat.js'\nimport { CHAT_RECEIVE_RESULTS } from '../../actions/chat/receiveChat.js'\nimport { CHAT_REQUEST_RESULTS } from '../../actions/chat/requestChat.js'\n\nconst DEFAULT_STATE = {\n  isFetching: false,\n  didInvalidate: false,\n  lastUpdated: 0,\n  lastRequestedAt: 0,\n  lastSuccesfullyRequestedAt: 0,\n  items: []\n}\n\nexport default function chat(state = DEFAULT_STATE, action) {\n  switch (action.type) {\n    case CHAT_INVALIDATE_RESULTS:\n      return {...state, didInvalidate: true}\n    case CHAT_RECEIVE_RESULTS:\n      if (action.requestedAt === state.lastRequestedAt) {\n        return {\n          ...state,\n          didInvalidate: false,\n          isFetching: false,\n          items: action.items,\n          lastUpdated: action.receivedAt,\n          lastSuccesfullyRequestedAt: action.requestedAt\n        }\n      } else {\n        return state\n      }\n    case CHAT_REQUEST_RESULTS:\n      return {\n        ...state,\n        didInvalidate: false,\n        isFetching: false,\n        lastRequestedAt: action.requestedAt\n      }\n    default:\n      return state\n  }\n}","import { CHAT_UPDATE_INPUT_TEXT } from '../../actions/chat/updateChatInputText.js'\n\nconst DEFAULT_STATE = ''\n\nexport default function inputText(state = DEFAULT_STATE, action) {\n  switch (action.type) {\n    case CHAT_UPDATE_INPUT_TEXT:\n      return action.newText\n    default:\n      return state\n  }\n}","import { combineReducers } from 'redux'\nimport isOpen from './isOpen.js'\nimport data from './data.js'\nimport inputText from './inputText.js'\n\nconst chat = combineReducers({\n  isOpen,\n  data,\n  inputText\n})\n\nexport default chat","import { UPDATE_ACCESS_TOKEN_LOCALLY } from '../../actions/spotify/updateAccessTokenLocally.js'\n\nconst DEFAULT_STATE = null\n\nexport default function accessToken(state = DEFAULT_STATE, action) {\n  switch (action.type) {\n    case UPDATE_ACCESS_TOKEN_LOCALLY:\n      return action.newAccessToken\n    default:\n      return state\n  }\n}","import { UPDATE_IS_PLAYING } from '../../actions/spotify/updateIsPlaying.js'\n\nconst DEFAULT_STATE = false\n\nexport default function isPlaying(state = DEFAULT_STATE, action) {\n  switch (action.type) {\n    case UPDATE_IS_PLAYING:\n      return action.isPlaying\n    default:\n      return state\n  }\n}","import { combineReducers } from 'redux'\nimport accessToken from './accessToken.js'\nimport isPlaying from './isPlaying.js'\n\nconst spotify = combineReducers({\n  accessToken,\n  isPlaying\n})\n\nexport default spotify","import { combineReducers } from 'redux'\nimport search from './search'\nimport queue from './queue'\nimport session from './session'\nimport user from './user'\nimport tab from './tab'\nimport menu from './menu'\nimport chat from './chat'\nimport spotify from './spotify'\n\nconst rootReducer = combineReducers({\n  search,\n  queue,\n  session,\n  user,\n  tab,\n  menu,\n  chat,\n  spotify\n})\n\nexport default rootReducer","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport '@fortawesome/fontawesome-free/css/all.min.css'\nimport 'mdbreact/dist/css/mdb.css'\nimport VisibleApp from './VisibleApp'\nimport * as serviceWorker from './serviceWorker'\n\nimport thunkMiddleware from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport rootReducer from './reducers'\nimport restoreUser from './actions/user/restoreUser.js'\nimport restoreSession from './actions/session/restoreSession.js'\nimport fetchChat from './actions/chat/fetchChat.js'\nimport fetchItems from './actions/queue/fetchItems.js'\nimport fetchFollowing from './actions/user/fetchFollowing.js'\nimport {initializeSocket} from './utilities/socket-context'\n\nlet socket = initializeSocket()\n\nsocket.on('update', msg => {\n  if (msg === 'queue') {\n    store.dispatch(fetchItems())\n  }\n  if (msg === 'chat') {\n    store.dispatch(fetchChat())\n  }\n  if (msg === 'followers') {\n    store.dispatch(fetchFollowing())\n  }\n})\n\nconst loggerMiddleware = createLogger()\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(\n    thunkMiddleware,\n    loggerMiddleware\n  )\n)\n\nstore.dispatch(restoreUser())\nstore.dispatch(restoreSession())\n\nReactDOM.render(\n  <Provider store={store}>\n    <VisibleApp />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import localforage from 'localforage'\nimport updateUser from './updateUser'\n\nexport default function restoreUser() {\n  return function(dispatch, getState) {\n    localforage.getItem('kb-username').then(username => {\n      if (username) {\n        dispatch(updateUser(username))\n      }\n    })\n  }\n}","import localforage from 'localforage'\nimport updateSession from './updateSession'\n\nexport default function restoreSession() {\n  return function(dispatch, getState) {\n    localforage.getItem('kb-session').then(sessionInfo => {\n      if (sessionInfo && sessionInfo.id && sessionInfo.name) {\n          dispatch(updateSession(sessionInfo.id, sessionInfo.name))\n      }\n    })\n  }\n}"],"sourceRoot":""}